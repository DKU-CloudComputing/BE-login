def fileExists(filename) {
    def file = new File(filename)
    file.exists()
}

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh 'rm -rf BE-login'
                sh 'git clone https://github.com/DKU-CloudComputing/BE-login.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'cd BE-login/login'
                    sh 'pwd'
                    sh 'ls'
                    sh 'chmod +x gradlew'
                    sh './gradle clean build'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh './gradlew test'
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    // Docker 이미지 빌드
                    docker.build('dipic/login-image')
                }
            }
        }

        stage('Docker Push') {
            steps {
                // Docker Hub에 로그인 후 이미지 푸시
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                            docker.image('dipic/login-image').push('latest')
                        }
                    }
                }
            }
        }

        stage('Kubernetes Deploy') {
            steps {
                // Kubernetes 클러스터에 배포
                script {
                    withKubeConfig([credentialsId: 'kubeconfig-credentials-id']) {
                        sh 'kubectl apply -f deployment.yaml'
                        sh 'kubectl apply -f service.yaml'
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build successful! Deploying...'
        }
        failure {
            echo 'Build failed! Not deploying.'
        }
    }
}

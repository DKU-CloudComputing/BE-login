def fileExists(filename) {
    def file = new File(filename)
    file.exists()
}

pipeline {
    agent {
            docker {
                image 'docker:latest' // Docker CLI가 포함된 이미지를 사용
                args '-v /var/run/docker.sock:/var/run/docker.sock' // Docker 소켓을 마운트
            }
        }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    sh '''
                    cd login
                    pwd
                    ls
                    ./gradlew clean build
                    '''
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh '''
                    cd login
                    ./gradlew test
                    '''
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    dir('login'){

                    sh '''
                    pwd
                    ls
                    '''
                    docker.build('dipic/login-image').push('latest')
                    }
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    sh 'docker push dipic/login-image'
                }
            }
        }

        stage('Kubernetes Deploy') {
            steps {
                script {
                    sh 'kubectl apply -f login/deployment.yaml'
                    sh 'kubectl apply -f login/service.yaml'
                }
            }
        }
    }

    post {
        success {
            echo 'Build successful!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}

pipeline {
    agent {
       any
    }

    stages {

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Gradle wrapper 스크립트 실행 전에 파일 유무 확인
                if (!fileExists('gradlew')) {
                    sh 'gradle wrapper --gradle-version=7.0.2 --distribution-type=bin'
                }
                // Gradle 빌드 실행
                sh './gradlew clean build'
            }
        }

        stage('Test') {
            steps {
                sh './gradlew test'
            }
        }

        stage('Docker Build') {
            steps {
                docker.build('dipic/login-image')
            }
        }

        stage('Docker Push') {
                    steps {
                        // Docker Hub에 로그인 후 이미지 푸시
                        withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                            script {
                                docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                                    docker.image('dipic/login-image').push('latest')
                                }
                            }
                        }
                    }
                }

        stage('Kubernetes Deploy') {
            steps {
                withKubeConfig([credentialsId: 'kubeconfig-credentials-id']) {
                    sh 'kubectl apply -f deployment.yaml'
                    sh 'kubectl apply -f service.yaml'
                }
            }//end steps
        }//end stage

    }//end stages

    post {
        success {
            echo 'Build successful! Deploying...'
        }
        failure {
            echo 'Build failed! Not deploying.'
        }
    }//end post

}//end pipeline

def fileExists(filename) {
    def file = new File(filename)
    file.exists()
}